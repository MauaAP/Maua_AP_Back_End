# Nome do Workflow
name: Build, Push to ECR and Deploy to App Runner

# Gatilho: Executa a pipeline quando houver um push na branch 'main'
on:
  push:
    branches:
      - main
      - feature/deploy-aws-imt

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # 1. Clona o código do seu repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura as credenciais da AWS usando chaves de acesso
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_IMT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_IMT }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_IMT }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      # 3. Faz o login no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Constrói a imagem Docker, adiciona a tag e envia para o ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 5. Inicia o deploy no AWS App Runner
      # 5. Atualiza o serviço do App Runner para usar a nova imagem e faz o deploy
      - name: Deploy new image to AWS App Runner
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SERVICE_ARN: ${{ secrets.APP_RUNNER_SERVICE_ARN }}
          IMAGE_URI: ${{ steps.build-image.outputs.image }}
        run: |
          aws apprunner update-service \
            --service-arn "$SERVICE_ARN" \
            --source-configuration "ImageRepository={ImageIdentifier=$IMAGE_URI,ImageRepositoryType=ECR}"
